// Note: Each hexagon is represented as two half-hexagons (top and bottom)
// because it makes manipulation of the falling block much easier

const blocks_hexagonal_triples = [
  [[
  [ 0, 0, 0],
  [ 0, 0,11],
  [ 0,11,11],
  [ 0,11,11],
  [ 0, 0,11],
  [ 0, 0, 0],
  ],[
  [ 0, 0, 0],
  [ 0, 0, 0],
  [ 0,11, 0],
  [ 0,11,11],
  [ 0,11,11],
  [ 0,11, 0],
  ]],
  
  [[
  [ 0, 0, 0],
  [ 0, 0,12],
  [ 0,12,12],
  [12,12, 0],
  [12, 0, 0],
  [ 0, 0, 0]
  ],[
  [ 0, 0, 0],
  [12, 0, 0],
  [12,12, 0],
  [ 0,12,12],
  [ 0, 0,12],
  [ 0, 0, 0]
  ],[
  [ 0,12, 0],
  [ 0,12, 0],
  [ 0,12, 0],
  [ 0,12, 0],
  [ 0,12, 0],
  [ 0,12, 0]
  ]],
  
  [[
  [ 0, 0, 0],
  [ 0, 0, 0],
  [ 0,13, 0],
  [13,13,13],
  [13, 0,13],
  [ 0, 0, 0]
  ],[
  [ 0, 0, 0],
  [13, 0, 0],
  [13,13, 0],
  [ 0,13, 0],
  [ 0,13, 0],
  [ 0,13, 0]
  ],[
  [ 0,13, 0],
  [ 0,13, 0],
  [ 0,13, 0],
  [13,13, 0],
  [13, 0, 0],
  [ 0, 0, 0]
  ],[
  [ 0, 0, 0],
  [13, 0,13],
  [13,13,13],
  [ 0,13, 0],
  [ 0, 0, 0],
  [ 0, 0, 0]
  ],[
  [ 0,13, 0],
  [ 0,13, 0],
  [ 0,13, 0],
  [ 0,13,13],
  [ 0, 0,13],
  [ 0, 0, 0]
  ],[
  [ 0, 0, 0],
  [ 0, 0,13],
  [ 0,13,13],
  [ 0,13, 0],
  [ 0,13, 0],
  [ 0,13, 0]
  ]]
];



const blocks_hexagonal_standard = [
  // o
  [[
  [0,1,0],
  [1,1,1],
  [1,1,1],
  [0,1,0],
  [0,0,0],
  [0,0,0]
  ],[
  [0,1,0],
  [0,1,1],
  [0,1,1],
  [0,1,1],
  [0,0,1],
  [0,0,0]
  ],[
  [0,0,0],
  [0,0,1],
  [0,1,1],
  [0,1,1],
  [0,1,1],
  [0,1,0]
  ],[
  [0,0,0],
  [0,0,0],
  [0,1,0],
  [1,1,1],
  [1,1,1],
  [0,1,0]
  ],[
  [0,0,0],
  [1,0,0],
  [1,1,0],
  [1,1,0],
  [1,1,0],
  [0,1,0]
  ],[
  [0,1,0],
  [1,1,0],
  [1,1,0],
  [1,1,0],
  [1,0,0],
  [0,0,0]
  ]],
  
  // t
  [[
  [0,0,0],
  [0,0,2],
  [0,2,2],
  [2,2,2],
  [2,0,2],
  [0,0,0]
  ],[
  [0,0,0],
  [2,0,0],
  [2,2,0],
  [0,2,2],
  [0,2,2],
  [0,2,0]
  ],[
  [0,2,0],
  [0,2,0],
  [0,2,0],
  [2,2,0],
  [2,2,0],
  [0,2,0]
  ],[
  [0,0,0],
  [2,0,2],
  [2,2,2],
  [2,2,0],
  [2,0,0],
  [0,0,0]
  ],[
  [0,2,0],
  [2,2,0],
  [2,2,0],
  [0,2,2],
  [0,0,2],
  [0,0,0]
  ],[
  [0,2,0],
  [0,2,2],
  [0,2,2],
  [0,2,0],
  [0,2,0],
  [0,2,0]
  ]],
  
  // t reversed
  [[
  [0,0,0],
  [0,0,3],
  [0,3,3],
  [3,3,0],
  [3,3,0],
  [0,3,0]
  ],[
  [0,0,0],
  [3,0,0],
  [3,3,0],
  [3,3,3],
  [3,0,3],
  [0,0,0]
  ],[
  [0,3,0],
  [3,3,0],
  [3,3,0],
  [0,3,0],
  [0,3,0],
  [0,3,0]
  ],[
  [0,3,0],
  [0,3,3],
  [0,3,3],
  [3,3,0],
  [3,0,0],
  [0,0,0]
  ],[
  [0,0,0],
  [3,0,3],
  [3,3,3],
  [0,3,3],
  [0,0,3],
  [0,0,0]
  ],[
  [0,3,0],
  [0,3,0],
  [0,3,0],
  [0,3,3],
  [0,3,3],
  [0,3,0]
  ]],
  
  // c
  [[
  [0,4,0],
  [4,4,4],
  [4,0,4],
  [0,0,4],
  [0,0,4],
  [0,0,0]
  ],[
  [0,4,0],
  [0,4,4],
  [0,0,4],
  [0,0,4],
  [0,4,4],
  [0,4,0]
  ],[
  [0,0,0],
  [0,0,4],
  [0,0,4],
  [4,0,4],
  [4,4,4],
  [0,4,0]
  ],[
  [0,0,0],
  [4,0,0],
  [4,0,0],
  [4,0,4],
  [4,4,4],
  [0,4,0]
  ],[
  [0,4,0],
  [4,4,0],
  [4,0,0],
  [4,0,0],
  [4,4,0],
  [0,4,0]
  ],[
  [0,4,0],
  [4,4,4],
  [4,0,4],
  [4,0,0],
  [4,0,0],
  [0,0,0]
  ]],
  
  // y
  [[
  [0,5,0],
  [0,5,0],
  [0,5,0],
  [5,5,5],
  [5,0,5],
  [0,0,0]
  ],[
  [0,0,0],
  [5,0,5],
  [5,5,5],
  [0,5,0],
  [0,5,0],
  [0,5,0]
  ]],
  
  // I
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,6],
  [0,0,0,6,6],
  [0,0,6,6,0],
  [0,6,6,0,0],
  [0,6,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,6,0,0,0],
  [0,6,6,0,0],
  [0,0,6,6,0],
  [0,0,0,6,6],
  [0,0,0,0,6],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,6,0],
  [0,0,6,6,0],
  [0,6,6,0,0],
  [6,6,0,0,0],
  [6,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [6,0,0,0,0],
  [6,6,0,0,0],
  [0,6,6,0,0],
  [0,0,6,6,0],
  [0,0,0,6,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],
  
  // z
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,7,0,7],
  [0,7,7,7,7],
  [0,7,0,7,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,7,0,0,0],
  [0,7,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,7,0],
  [0,0,0,7,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,7,7,0,0],
  [0,7,0,0,0],
  [0,7,0,0,0],
  [0,7,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,7,0,7,0],
  [7,7,7,7,0],
  [7,0,7,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,7,0,0,0],
  [0,7,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,7,0],
  [0,0,0,7,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,7,0],
  [0,0,0,7,0],
  [0,0,0,7,0],
  [0,0,7,7,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],
  
  // s
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,8,0,8,0],
  [0,8,8,8,8],
  [0,0,8,0,8],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,8,0],
  [0,0,0,8,0],
  [0,0,0,8,0],
  [0,0,0,8,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,8,0],
  [0,0,8,8,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,8,8,0,0],
  [0,8,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [8,0,8,0,0],
  [8,8,8,8,0],
  [0,8,0,8,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,8,0,0,0],
  [0,8,0,0,0],
  [0,8,0,0,0],
  [0,8,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,8,0],
  [0,0,8,8,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,8,8,0,0],
  [0,8,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],
  
  // f
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,9,0],
  [0,0,9,9,9],
  [0,9,9,0,9],
  [0,9,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,9,0,0,0],
  [0,9,9,0,0],
  [0,0,9,9,0],
  [0,0,0,9,0],
  [0,0,0,9,0],
  [0,0,0,9,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,9,9,0,0],
  [0,9,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,9,0],
  [9,0,9,9,0],
  [9,9,9,0,0],
  [0,9,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,9,0,0,0],
  [0,9,0,0,0],
  [0,9,0,0,0],
  [0,9,9,0,0],
  [0,0,9,9,0],
  [0,0,0,9,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,9,0],
  [0,0,9,9,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],
  
  // f reversed
  [[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0,10,10, 0],
  [ 0,10,10, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [10,10,10, 0, 0],
  [10, 0,10,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0,10,10, 0],
  [ 0,10,10, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10,10, 0,10],
  [ 0, 0,10,10,10],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0]
  ]]
];

  
  
  
const blocks_hexagonal_pentris = [
];