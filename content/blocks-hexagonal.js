function createHexState(width, height, x, y, path) {
  // because of representation being based on half-hexes
  height = height * 2 + 1;
  y = y * 2;
  if(x%2==0) y++;

  var state = new Array(height);
  for(var i = 0; i < height; i++) {
    state[i] = new Array(width);
    for(var j = 0; j < width; j++) state[i][j] = 0;
  }

  state[y][x] = 1;
  state[y+1][x] = 1;
  for(var k = 0; k < path.length; k++) {
    switch(path[k]) {
      case N:  y-=2; break;
      case NE: y--; x++; break;
      case SE: y++; x++; break;
      case S:  y+=2; break;
      case SW: y++; x--; break;
      case NW: y--; x--; break;
    }
    state[y][x] = 1;
    state[y+1][x] = 1;
  }

  return state;
}




// Note: Each hexagon is represented as two half-hexagons (top and bottom)
// because it makes manipulation of the falling block much easier

blocks["hex"] = [];

blocks["hex"]["triples"] = [
  [
  createHexState(3,3,1,1,[NE,S]),
  createHexState(3,3,1,1,[S,NE])
  ],

  [
  createHexState(3,3,0,1,[NE,NE]),
  createHexState(3,3,0,0,[SE,SE]),
  createHexState(3,3,1,0,[S,S])
  ],

  [
  createHexState(3,3,0,1,[NE,SE]),
  createHexState(3,3,0,0,[SE, S]),
  createHexState(3,3,1,0,[ S,SW]),
  createHexState(3,3,2,0,[SW,NW]),
  createHexState(3,3,2,1,[NW, N]),
  createHexState(3,3,1,2,[ N,NE])
  ]
];



blocks["hex"]["standard"] = [
  /*
  // o
  [
  createHexState(3,3,1,1,[NW,NE,SE]),
  createHexState(3,3,1,1,[ N,SE, S]),
  createHexState(3,3,1,1,[NE, S,SW]),
  createHexState(3,3,1,1,[SE,SW,NW]),
  createHexState(3,3,1,1,[ S,NW, N]),
  createHexState(3,3,1,1,[SW, N,NE])
  ],

  // t
  [
  createHexState(3,3,0,1,[NE,NE, S]),
  createHexState(3,3,0,0,[SE,SE,SW]),
  createHexState(3,3,1,0,[ S, S,NW]),
  createHexState(3,3,2,0,[SW,SW, N]),
  createHexState(3,3,2,1,[NW,NW,NE]),
  createHexState(3,3,1,2,[ N, N,SE])
  ],
  */

  // t reversed
  [[
  [0,0,0],
  [0,0,3],
  [0,3,3],
  [3,3,0],
  [3,3,0],
  [0,3,0]
  ],[
  [0,0,0],
  [3,0,0],
  [3,3,0],
  [3,3,3],
  [3,0,3],
  [0,0,0]
  ],[
  [0,3,0],
  [3,3,0],
  [3,3,0],
  [0,3,0],
  [0,3,0],
  [0,3,0]
  ],[
  [0,3,0],
  [0,3,3],
  [0,3,3],
  [3,3,0],
  [3,0,0],
  [0,0,0]
  ],[
  [0,0,0],
  [3,0,3],
  [3,3,3],
  [0,3,3],
  [0,0,3],
  [0,0,0]
  ],[
  [0,3,0],
  [0,3,0],
  [0,3,0],
  [0,3,3],
  [0,3,3],
  [0,3,0]
  ]],

  /*
  // c
  [[
  [0,4,0],
  [4,4,4],
  [4,0,4],
  [0,0,4],
  [0,0,4],
  [0,0,0]
  ],[
  [0,4,0],
  [0,4,4],
  [0,0,4],
  [0,0,4],
  [0,4,4],
  [0,4,0]
  ],[
  [0,0,0],
  [0,0,4],
  [0,0,4],
  [4,0,4],
  [4,4,4],
  [0,4,0]
  ],[
  [0,0,0],
  [4,0,0],
  [4,0,0],
  [4,0,4],
  [4,4,4],
  [0,4,0]
  ],[
  [0,4,0],
  [4,4,0],
  [4,0,0],
  [4,0,0],
  [4,4,0],
  [0,4,0]
  ],[
  [0,4,0],
  [4,4,4],
  [4,0,4],
  [4,0,0],
  [4,0,0],
  [0,0,0]
  ]],

  // y
  [[
  [0,5,0],
  [0,5,0],
  [0,5,0],
  [5,5,5],
  [5,0,5],
  [0,0,0]
  ],[
  [0,0,0],
  [5,0,5],
  [5,5,5],
  [0,5,0],
  [0,5,0],
  [0,5,0]
  ]],

  // I
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,6],
  [0,0,0,6,6],
  [0,0,6,6,0],
  [0,6,6,0,0],
  [0,6,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,6,0,0,0],
  [0,6,6,0,0],
  [0,0,6,6,0],
  [0,0,0,6,6],
  [0,0,0,0,6],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,6,0],
  [0,0,6,6,0],
  [0,6,6,0,0],
  [6,6,0,0,0],
  [6,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [6,0,0,0,0],
  [6,6,0,0,0],
  [0,6,6,0,0],
  [0,0,6,6,0],
  [0,0,0,6,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,6,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],

  // z
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,7,0,7],
  [0,7,7,7,7],
  [0,7,0,7,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,7,0,0,0],
  [0,7,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,7,0],
  [0,0,0,7,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,7,7,0,0],
  [0,7,0,0,0],
  [0,7,0,0,0],
  [0,7,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,7,0,7,0],
  [7,7,7,7,0],
  [7,0,7,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,7,0,0,0],
  [0,7,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,7,0],
  [0,0,0,7,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,7,0],
  [0,0,0,7,0],
  [0,0,0,7,0],
  [0,0,7,7,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,7,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],

  // s
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,8,0,8,0],
  [0,8,8,8,8],
  [0,0,8,0,8],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,8,0],
  [0,0,0,8,0],
  [0,0,0,8,0],
  [0,0,0,8,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,8,0],
  [0,0,8,8,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,8,8,0,0],
  [0,8,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [8,0,8,0,0],
  [8,8,8,8,0],
  [0,8,0,8,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,8,0,0,0],
  [0,8,0,0,0],
  [0,8,0,0,0],
  [0,8,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,8,0],
  [0,0,8,8,0],
  [0,0,8,0,0],
  [0,0,8,0,0],
  [0,8,8,0,0],
  [0,8,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],

  // f
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,9,0],
  [0,0,9,9,9],
  [0,9,9,0,9],
  [0,9,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,9,0,0,0],
  [0,9,9,0,0],
  [0,0,9,9,0],
  [0,0,0,9,0],
  [0,0,0,9,0],
  [0,0,0,9,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,9,9,0,0],
  [0,9,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,9,0],
  [9,0,9,9,0],
  [9,9,9,0,0],
  [0,9,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,9,0,0,0],
  [0,9,0,0,0],
  [0,9,0,0,0],
  [0,9,9,0,0],
  [0,0,9,9,0],
  [0,0,0,9,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,9,0],
  [0,0,9,9,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,9,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]],

  // f reversed
  [[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0,10,10, 0],
  [ 0,10,10, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [10,10,10, 0, 0],
  [10, 0,10,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0,10,10, 0],
  [ 0,10,10, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0,10, 0, 0, 0],
  [ 0,10,10, 0,10],
  [ 0, 0,10,10,10],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0]
  ],[
  [ 0, 0, 0, 0, 0],
  [ 0, 0, 0, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10, 0, 0],
  [ 0, 0,10,10, 0],
  [ 0, 0, 0,10, 0],
  [ 0, 0, 0, 0, 0]
  ]]*/
];




blocks["hex"]["pentris"] = [
  // D
  [[
  [0,0,0],
  [0,0,1],
  [0,1,1],
  [1,1,1],
  [1,1,1],
  [0,1,0]
  ],[
  [0,0,0],
  [1,0,0],
  [1,1,0],
  [1,1,1],
  [1,1,1],
  [0,1,0]
  ],[
  [0,1,0],
  [1,1,0],
  [1,1,0],
  [1,1,0],
  [1,1,0],
  [0,1,0]
  ],[
  [0,1,0],
  [1,1,1],
  [1,1,1],
  [1,1,0],
  [1,0,0],
  [0,0,0]
  ],[
  [0,1,0],
  [1,1,1],
  [1,1,1],
  [0,1,1],
  [0,0,1],
  [0,0,0]
  ],[
  [0,1,0],
  [0,1,1],
  [0,1,1],
  [0,1,1],
  [0,1,1],
  [0,1,0]
  ]],

  // x or H
  [[
  [0,0,0],
  [2,0,2],
  [2,2,2],
  [2,2,2],
  [2,0,2],
  [0,0,0]
  ],[
  [0,2,0],
  [2,2,0],
  [2,2,0],
  [0,2,2],
  [0,2,2],
  [0,2,0]
  ],[
  [0,2,0],
  [0,2,2],
  [0,2,2],
  [2,2,0],
  [2,2,0],
  [0,2,0]
  ]],

  // T
  [[
  [0,3,0],
  [3,3,3],
  [3,3,3],
  [0,3,0],
  [0,3,0],
  [0,3,0]
  ],[
  [0,3,0],
  [0,3,3],
  [0,3,3],
  [3,3,3],
  [3,0,3],
  [0,0,0]
  ],[
  [0,0,0],
  [3,0,3],
  [3,3,3],
  [0,3,3],
  [0,3,3],
  [0,3,0]
  ],[
  [0,3,0],
  [0,3,0],
  [0,3,0],
  [3,3,3],
  [3,3,3],
  [0,3,0]
  ],[
  [0,0,0],
  [3,0,3],
  [3,3,3],
  [3,3,0],
  [3,3,0],
  [0,3,0]
  ],[
  [0,3,0],
  [3,3,0],
  [3,3,0],
  [3,3,3],
  [3,0,3],
  [0,0,0]
  ]],


  // t
  [[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,4,0],
  [0,0,4,4,0],
  [0,4,4,0,0],
  [4,4,4,0,0],
  [4,0,4,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [4,0,0,0,0],
  [4,4,0,0,0],
  [0,4,4,0,0],
  [0,4,4,4,0],
  [0,4,0,4,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,4,4,0,0],
  [0,4,4,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,4,0,4],
  [0,0,4,4,4],
  [0,0,4,4,0],
  [0,4,4,0,0],
  [0,4,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,4,0,4,0],
  [0,4,4,4,0],
  [0,0,4,4,0],
  [0,0,0,4,4],
  [0,0,0,0,4],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,4,4,0],
  [0,0,4,4,0],
  [0,0,4,0,0],
  [0,0,4,0,0],
  [0,0,4,0,0]
  ]],

  // b
  [[
  [0,0,0,0,0],
  [0,0,0,5,0],
  [0,0,5,5,0],
  [0,5,5,0,0],
  [0,5,5,0,0],
  [0,5,5,0,0],
  [0,5,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,5,0,0],
  [0,5,5,5,0],
  [0,5,5,5,5],
  [0,0,5,0,5],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,5,0,0],
  [0,0,5,5,0],
  [0,0,5,5,0],
  [0,0,5,5,0],
  [0,0,0,5,0],
  [0,0,0,5,0],
  [0,0,0,5,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,5,0],
  [0,0,5,5,0],
  [0,0,5,5,0],
  [0,0,5,5,0],
  [0,5,5,0,0],
  [0,5,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [5,0,5,0,0],
  [5,5,5,5,0],
  [0,5,5,5,0],
  [0,0,5,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ],[
  [0,0,0,0,0],
  [0,5,0,0,0],
  [0,5,0,0,0],
  [0,5,0,0,0],
  [0,5,5,0,0],
  [0,5,5,0,0],
  [0,5,5,0,0],
  [0,0,5,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]
  ]]

  // xxx: incomplete
];

blocks["hex"]["current"] = blocks["hex"]["standard"];
